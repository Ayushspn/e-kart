{"version":3,"sources":["logo.svg","redux/ShopList/ShopActionCreators.js","redux/ShopList/ShopList.action.types.js","Components/Shopping-Item/Shopping-item.component.js","Components/Shopping-List/Shopping-List.component.js","Components/Filter-shopping-List/Filter-shopping-List.js","Components/HOC/spinner/spinner.component.js","Components/modal/modal.component.js","Components/Sort/Price-Sort/Price-Sort.component.js","Pages/HomePage/HomePage.js","APIURL.js","Components/Cart-details/cart-details.component.js","Pages/Checkoutpage/Checkoutpage.js","Components/Search/Search.component.js","Components/Header/Header.component.js","Components/Sort/Sort.component.js","App.js","serviceWorker.js","redux/ShopList/ShopUtility.js","redux/ShopList/ShopReducer.js","redux/rootReducer.js","index.js"],"names":["module","exports","SetSpinnerFlag","spinnerFlag","type","payload","connect","dispatch","addItemToCart","shopItem","parameter","cartItem","value","addedItem","removeItem","items","cmpType","name","id","price","img_url","discount","category","classes","card","cardImage","cardContainer","cardDetailsContainer","cart_item_quantity_txt_align","cartbuttonchange","className","src","alt","style","width","onClick","quantity","nim","onChange","event","target","addRemoveItem","ShopItemList","shop","setSpinner","flag","useEffect","length","map","key","FilterShoppingList","minRangeChangeHandler","maxRangeChangelHandler","minValue","maxValue","min","max","step","textAlign","Spinner","isLoading","Modal","children","modal","modalType","console","log","sortShopItems","sortItems","renderSortingForMobile","useState","activeClass","setActiveClass","sortingParameter","setSortParameter","sortAndSetActiveClass","spinnerStatus","getShoppingList","fetch","then","response","json","data","catch","error","filterShoppingList","rangeObj","setSpinnerFlag","setMinValue","setMaxValue","setopenModal","renderCmp","setrenderCmp","getMinRangeValue","getMaxRangeValue","applyRangeFilter","openModal","renderComponent","closModal","cartItemTotalPrice","cartItemTotalDiscount","cartItemCount","cartItems","searchForTitle","title","withRouter","history","searchTxt","setSearchTxt","location","pathname","inputChangeHandle","placeholder","aria-hidden","cartCount","to","push","Sort","exact","path","component","HomePage","CheckOut","Boolean","window","hostname","match","apllyUtilityRange","shopList","range","filteredList","filter","apllyUtilityAdditem","addItem","copyCartItems","existingItem","findIndex","shopListItem","cartItemsObj","apllyUtilityTotalItemCount","totalPrice","totalDiscount","reduce","accumulatedItems","removedItem","splice","sortByPassedParameter","action","copyShopList","sort","previousItem","nextItem","sortedItem","parseFloat","searchByTitle","searchString","searchStringToLowerCase","toLowerCase","copyCartListItem","includes","INITIALSTATE","copyShopItemList","shopReducer","state","copyDataFilter","rangeBasedFilter","countItems","countRemoveItems","removedItems","sortedShopList","resetSortBy","searchShopList","searchedShopList","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deaaee17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as actionTypes from './ShopList.action.types'\r\nimport * as apiURL from '../../APIURL';\r\n\r\nconst ShopListSuccess = shopList => ({\r\n    type: actionTypes.FETCH_CART_LIST,\r\n    payload: shopList\r\n  });\r\n\r\n  export const   SetSpinnerFlag = spinnerFlag => ({\r\n    type: actionTypes.SET_SPINNER_FLAG,\r\n    payload: spinnerFlag\r\n  });\r\n\r\nexport const fetchShopList = () => {\r\n    return dispatch => {\r\n        fetch(apiURL.fetchCartItemsURL)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch(ShopListSuccess(data));\r\n        }\r\n        )\r\n        .catch(error => console.log(error));\r\n  };\r\n}\r\n\r\nexport const ApplyFilter = (filterRange) => ({\r\n  type: actionTypes.APPLY_RANGE,\r\n  payload: filterRange\r\n})\r\n\r\nexport const addedItem = (cartItem, parameter) => ({\r\n  type: actionTypes.ADD_ITEM,\r\n  value: {cartItem, parameter}\r\n})\r\n\r\nexport const removedItem = (cartItem) => ({\r\n  type: actionTypes.REMOVE_ITEM,\r\n  payload : cartItem\r\n})\r\n\r\n\r\nexport const sortItems = (parameter) => ({\r\n  type: actionTypes.SORT_ITEM,\r\n  payload : parameter\r\n})\r\n\r\n\r\nexport const searchTitle = (searchString) => ({\r\n  type: actionTypes.SEARCH_STRING,\r\n  payload : searchString\r\n})\r\n","export const FETCH_CART_LIST = 'FETCH_CART_LIST';\r\nexport const APPLY_RANGE = 'APPLY_RANGE';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const SORT_ITEM = 'SORT_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SET_SPINNER_FLAG = 'SET_SPINNER_FLAG';\r\nexport const SEARCH_STRING = 'SEARCH_STRING';","import React from 'react';\r\nimport './shopping-item.styles.scss'\r\nimport { connect } from 'react-redux';\r\nimport { addedItem, removedItem } from '../../redux/ShopList/ShopActionCreators';\r\n\r\n\r\nconst ShoppingListItem = ({ items, addItemToCart, cmpType, removeItem, type }) => {\r\n    const { id, name, price, img_url, category, discount } = items;\r\n    const addRemoveItem = (event) => {\r\n        event.target.value > items.quantity ?\r\n            addItemToCart(items, 'addItem') :\r\n            addItemToCart(items, 'removeItem');\r\n    }\r\n\r\n    const removeItemFromCart= (item) => {\r\n        removeItem(item)\r\n    }\r\n    const classes = {card : 'card'}\r\n    if(type === 'shoppingItem'){\r\n       // classes.card = 'card';\r\n        classes.cardImage = 'col-md-12 card-img';\r\n        classes.cardContainer = 'container col-md-12 card-img';\r\n        classes.cardDetailsContainer = '';\r\n        classes.cart_item_quantity_txt_align = ''\r\n        classes.cartbuttonchange = 'cart-button';\r\n    }\r\n    else {\r\n        classes.card = 'card_change_width row'\r\n        classes.cardImage = 'col-md-3';\r\n        classes.cardContainer = 'container col-md-9 card-img';\r\n        classes.cardDetailsContainer = 'card_change_txt_align';\r\n        classes.cart_item_quantity_txt_align = 'cart_item_quantity_txt_align';\r\n        classes.cartbuttonchange = 'cart-button_change cart-button'\r\n    }\r\n    return (\r\n        <div className={classes.card}>\r\n            <div className ={classes.cardImage}>\r\n            <img src={img_url} alt='produc-image' style={{ width: '100%' }} />\r\n            </div>\r\n            <div className={classes.cardContainer}>\r\n                <h4 className = 'cart-item-name'>{name}</h4>\r\n                <div className={`cart-details-container ${classes.cardDetailsContainer}`} >\r\n                    <span>\r\n                        &#x20b9; {price}\r\n                    </span>\r\n                    <span className='add-padding'>\r\n                        {price /100*discount} \r\n                    </span>\r\n                    <span className='add-padding' style = {{'color' : 'green'}}>\r\n                        <b>{discount} % Off</b>\r\n                    </span>\r\n                </div>\r\n                {\r\n                    cmpType === 'shopItem' ? <button className ='add-to-cart-btn' onClick={() => addItemToCart(items, 'addItem')}>Add To Cart</button> :\r\n                        (\r\n                            <div className = {`${classes.cart_item_quantity_txt_align}`}>\r\n                                <input type='number' value={items.quantity} nim='0' onChange={(event) => addRemoveItem(event)} />\r\n                                <button className= {classes.cartbuttonchange} onClick={() => removeItemFromCart(items)}>Remove Item</button>\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addItemToCart: (shopItem, parameter) => dispatch(addedItem(shopItem, parameter)),\r\n        removeItem: (shopItem) => dispatch(removedItem(shopItem))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ShoppingListItem);","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ShoppingListItem from '../Shopping-Item/Shopping-item.component';\r\nimport './shopping-List.styles.scss';\r\nimport {SetSpinnerFlag} from '../../redux/ShopList/ShopActionCreators'\r\n\r\nconst ShoppingList = ({ ShopItemList, setSpinner}) => {\r\n    useEffect(() => {\r\n        setSpinner(true)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(ShopItemList && ShopItemList.length > 0){\r\n           setSpinner(false)\r\n        }\r\n    },[ShopItemList.length])\r\n    return (\r\n        <div className ='row'>\r\n        {ShopItemList  &&  ShopItemList.length > 0 ?  ShopItemList.map((items) => {\r\n            return (\r\n                <ShoppingListItem \r\n                key={items.id} \r\n                items = {items}\r\n                type = 'shoppingItem' \r\n                cmpType = 'shopItem'\r\n                />\r\n            )\r\n        })\r\n        : <div className ='no-records'> No Record Found</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shop: { ShopItemList } }) => {\r\n    return {\r\n        ShopItemList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSpinner : (flag) => dispatch(SetSpinnerFlag(flag))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingList);","import React from 'react';\r\nimport './Filter-shopping.styles.scss';\r\nimport InputRange from 'react-input-range';\r\n\r\nconst FilterShoppingList = ({ minRangeChangeHandler, maxRangeChangelHandler, minValue, maxValue }) => {\r\n    return (\r\n        <div className='filter-container'>\r\n            <div>\r\n                <span className='pull-left'>&#x20b9;{minValue}</span>\r\n                <span className='pull-right'>&#x20b9; {maxValue}</span>\r\n            </div>\r\n            <div style={{ 'clear': 'both' }}></div>\r\n            <input  min=\"100\" max=\"1000\" step=\"100\" type=\"range\" onChange = {minRangeChangeHandler} value = {minValue}/>\r\n            <input  min=\"1000\" max=\"10000\" step=\"100\" type=\"range\" onChange = {maxRangeChangelHandler} value = {maxValue}/>\r\n            <p style={{ textAlign: 'center' }}>Price</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterShoppingList;","import React from 'react';\r\nimport './spinner.styles.scss';\r\n\r\nconst Spinner =  ({isLoading}) => {\r\n    return isLoading? (\r\n        <div className ='SpinnerOverlay'>\r\n            <div className='SpinnerContainer'>\r\n\r\n            </div>\r\n        </div>\r\n    ): null\r\n}\r\nexport default Spinner;","import React from 'react';\r\nimport './modal.styles.scss';\r\nconst Modal = ({children, modal, modalType}) => {\r\n    console.log('modalType', modalType);\r\n    return (\r\n        modal? \r\n        <div className=\"modal\">\r\n        <div className=\"modal-content\">\r\n        {modalType === 'FILTER' ? <h3>Filter Options</h3> : <h3>Sort Options</h3>}\r\n                {children}\r\n            \r\n            </div>\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport './Price-Sort.styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { sortItems } from '../../../redux/ShopList/ShopActionCreators';\r\n\r\n\r\nconst PriceSort = ({ sortShopItems, renderSortingForMobile }) => {\r\n    const [activeClass, setActiveClass] = useState('');\r\n    const [sortingParameter, setSortParameter] = useState('');\r\n\r\n    const sortAndSetActiveClass = (parameter) => {\r\n        sortShopItems(parameter);\r\n        setActiveClass(parameter)\r\n    }\r\n\r\n    const sortingForMobile = (parameter) => {\r\n        sortShopItems(parameter);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='price-sort-container mobile-display__none'>\r\n                <button className={`${activeClass === 'HIGH_TO_LOW' ? 'active' : null} price-sort__button`} onClick={() => sortAndSetActiveClass('HIGH_TO_LOW')}> PRICE HIGH TO LOW</button>\r\n                <button className={`${activeClass === 'LOW_TO_HIGH' ? 'active' : null} price-sort__button`} onClick={() => sortAndSetActiveClass('LOW_TO_HIGH')}> PRICE LOW TO HIGH</button>\r\n                <button className={`${activeClass === 'SORT_BY_DISCOUNT' ? 'active' : null} price-sort__button`} onClick={() => sortAndSetActiveClass('SORT_BY_DISCOUNT')}> DISCOUNT</button>\r\n                <button className='price-sort__button' onClick={() => sortAndSetActiveClass(' ')}> RESET</button>\r\n            </div>\r\n            {renderSortingForMobile ?<div className='desctop-display__none'>\r\n                <div>\r\n                    <label className=\"container\">\r\n                    <input type=\"radio\" name='SORT' onChange = {() => setSortParameter('HIGH_TO_LOW')}/>\r\n                    PRICE HIGH TO LOW\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"container\">\r\n                    <input type=\"radio\" name='SORT' onChange = {() => setSortParameter('LOW_TO_HIGH')}/>\r\n                    PRICE LOW TO HIGH\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"container\">\r\n                    <input type=\"radio\" name='SORT' onChange = {() => setSortParameter('SORT_BY_DISCOUNT')}/>\r\n                    DISCOUNT\r\n                    </label>\r\n                </div>\r\n                <button  className = 'apply-rng-btn__modal apply_btn__position' onClick = {() => sortingForMobile(sortingParameter)}>Apply</button>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sortShopItems: (parameter) => dispatch(sortItems(parameter))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PriceSort);","import React, { useEffect, useState } from 'react';\r\n\r\nimport ShoppingList from '../../Components/Shopping-List/Shopping-List.component';\r\nimport FilterShoppingList from '../../Components/Filter-shopping-List/Filter-shopping-List';\r\nimport Spinner from '../../Components/HOC/spinner/spinner.component'\r\nimport Modal from '../../Components/modal/modal.component';\r\nimport PriceSort from '../../Components/Sort/Price-Sort/Price-Sort.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport './Hompage.modules.scss';\r\nimport { fetchShopList, ApplyFilter } from '../../redux/ShopList/ShopActionCreators';\r\nimport { SetSpinnerFlag } from '../../redux/ShopList/ShopActionCreators'\r\n\r\nconst HomePage = ({ getShoppingList, filterShoppingList, setSpinnerFlag, spinnerStatus }) => {\r\n    const [minValue, setMinValue] = useState(100);\r\n    const [maxValue, setMaxValue] = useState(10000);\r\n    const [modal, setopenModal] = useState(false);\r\n    const [renderCmp, setrenderCmp] = useState('');\r\n    useEffect(() => {\r\n        getShoppingList();\r\n    }, [])\r\n\r\n    const getMinRangeValue = (event) => {\r\n        setMinValue(event.target.value)\r\n    }\r\n\r\n    const getMaxRangeValue = (event) => {\r\n        setMaxValue(event.target.value)\r\n    }\r\n\r\n    const applyRangeFilter = () => {\r\n        filterShoppingList({\r\n            min: minValue,\r\n            max: maxValue\r\n        })\r\n       // setopenModal(false);\r\n    }\r\n\r\n    const openModal = (renderComponent) => {\r\n        setrenderCmp(renderComponent);\r\n        setopenModal(true);\r\n    }\r\n\r\n    const closModal = () => {\r\n        setopenModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner isLoading={spinnerStatus}></Spinner>\r\n            <Modal modal={modal}\r\n            modalType = {renderCmp}\r\n            >\r\n                {renderCmp === 'FILTER' ? <div>\r\n                    <FilterShoppingList\r\n                        minRangeChangeHandler={(event) => getMinRangeValue(event)}\r\n                        minValue={minValue}\r\n                        maxValue={maxValue}\r\n                        maxRangeChangelHandler={(event) => getMaxRangeValue(event)}\r\n                    ></FilterShoppingList>\r\n                    <div>\r\n                        <button onClick={() => applyRangeFilter()} className='apply-rng-btn__modal'> Apply Range</button>\r\n                        <button onClick={() => closModal()} className='apply-rng-btn__modal'>Close</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                : \r\n                <div>\r\n                <PriceSort renderSortingForMobile = {true}/>\r\n                <button onClick={() => closModal()} className='apply-rng-btn__modal'>Close</button>\r\n                </div>\r\n            \r\n            }\r\n            </Modal>\r\n            <div className='row main-container'>\r\n                <div className='col-md-3 col-lg-3'>\r\n                    <div className='filter-sort-mobile desctop-display__none'>\r\n                        <div className='filter-sort-icon'>\r\n                            <i className=\"fa fa-sort\" onClick={() => openModal('SORT')}>Sort</i>\r\n                        </div>\r\n                        <div className='filter-sort-icon'>\r\n                            <i className=\"fa fa-filter\" onClick={() => openModal('FILTER')}>Filter</i>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mobile-display__none'>\r\n                        <div className='filter-text'><b>Filter</b></div>\r\n                        <FilterShoppingList\r\n                            minRangeChangeHandler={(event) => getMinRangeValue(event)}\r\n                            minValue={minValue}\r\n                            maxValue={maxValue}\r\n                            maxRangeChangelHandler={(event) => getMaxRangeValue(event)}\r\n                        ></FilterShoppingList>\r\n                        <div className='apply-btn-container'>\r\n                            <button onClick={() => applyRangeFilter()} className='apply-rng-btn mobile-display__none'> Apply Range</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-9 col-lg-9'>\r\n                    <ShoppingList></ShoppingList>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps = ({ shop: { spinnerFlag } }) => {\r\n    return {\r\n        spinnerStatus: spinnerFlag\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        getShoppingList: () => dispatch(fetchShopList()),\r\n        filterShoppingList: (rangeObj) => dispatch(ApplyFilter(rangeObj)),\r\n        setSpinnerFlag: (flag) => dispatch(SetSpinnerFlag(flag))\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(HomePage);","export const fetchCartItemsURL = 'https://api.myjson.com/bins/qzuzi';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CartDetails = ({ cartItemTotalDiscount, cartItemTotalPrice, cartItemCount }) => {\r\n    return (\r\n        <div className='col-lg-3 col-md-3 col-sm-12 col-xs-12'>\r\n            <div className ='card' style = {{'width' : '100%'}}>\r\n            <h3>Price Details</h3>\r\n            <div>\r\n                <span>Price({cartItemCount} <span>Items</span>)</span> : <span>{cartItemTotalPrice}</span>\r\n            </div>\r\n            <div>\r\n                <span>Discount</span> : <span>{cartItemTotalDiscount}</span>\r\n            </div>\r\n\r\n            <div className='container '>\r\n                <b>Total Payable</b> : <span>{cartItemTotalPrice - (cartItemTotalDiscount)}</span>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps = ({ shop: { cartItemTotalPrice, cartItemTotalDiscount, cartItemCount } }) => {\r\n    return {\r\n        cartItemTotalPrice,\r\n        cartItemTotalDiscount,\r\n        cartItemCount\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToProps)(CartDetails);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Checkout.styles.scss';\r\nimport ShoppingListItem from '../../Components/Shopping-Item/Shopping-item.component';\r\nimport CartDetails from '../../Components/Cart-details/cart-details.component'\r\n\r\nconst CheckOutPage = ({ cartItems, cartItemCount }) => {\r\n\r\n    return (\r\n        <div className='row chnge-width'>\r\n            <div className='col-lg-9 col-md-9 col-sm-12 col-xs-12' style={{'maxWidth' : '57rem', 'margin': 'auto'}}>\r\n                <div className='row'>\r\n                    {cartItems && cartItems.length > 0 ? cartItems.map((cartItem) => (<ShoppingListItem key = {cartItem.id} id={cartItem.id} items={cartItem}></ShoppingListItem>))\r\n                        : <div>Please add Item to Cart</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n                   {cartItems && cartItems.length> 0 ? (<CartDetails></CartDetails>) : null } \r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapsStateToPrps = ({ shop: { cartItems, cartItemCount } }) => {\r\n    return {\r\n        cartItems,\r\n        cartItemCount: cartItemCount\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapsStateToPrps)(CheckOutPage);","import React, {useState, useEffect} from 'react';\r\nimport './search.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {searchTitle} from '../../redux/ShopList/ShopActionCreators';\r\n\r\nconst Search = ({searchForTitle, history}) => {\r\n    const [searchTxt, setSearchTxt] = useState('');\r\n    const inputChangeHandle = (event) => {\r\n        setSearchTxt(event.target.value)\r\n        searchForTitle(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSearchTxt('')\r\n    },[])\r\n    \r\n    return (\r\n        <div className ='search-icon'>\r\n            {history.location.pathname === '/' ? \r\n            <><input className ='form-control search-box' type='search' value = {searchTxt} onChange = {(event) => inputChangeHandle(event)}\r\n            placeholder ='search by name'\r\n            ></input>\r\n            <button className ='serach-button'><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button></>\r\n             : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchForTitle : (title) => dispatch(searchTitle(title))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Search));","import React, { useEffect } from 'react';\r\nimport './Header.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport Search from '../Search/Search.component';\r\nconst Header = ({cartCount, history}) => {\r\n\r\n    const redirectTocartPage = () => {\r\n        history.push('CheckOut')\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"header row\">\r\n            <div className=\"col-md-8 col-sm-2 col-sx-2 company-logo\">\r\n            <Link to=\"/\" className=\"logo\">CompanyLogo</Link>\r\n            </div>\r\n            <div className=\"col-md-4 col-sm-10 col-sx-10\">\r\n                <Search/>\r\n                <div className='cart-icon'>\r\n                <button className ='cart-button pull-right' onClick = {() => redirectTocartPage()}><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"><span className ='cartItem'>{cartCount || 0}</span></i></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapstateToProps = ({shop: {cartItemCount}}) => {\r\n    return {\r\n        cartCount : cartItemCount\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps)(withRouter(Header));","import React from 'react';\r\nimport './Sort.styles.scss'\r\nimport PriceSort from './Price-Sort/Price-Sort.component';\r\nconst Sort = () => {\r\n    return <div className ='sort-container'>\r\n                <span className='mobile-display__none'><b>SORT BY</b> </span>\r\n                <PriceSort renderSortingForMobile = {false}></PriceSort>\r\n            </div>\r\n}\r\n\r\nexport default Sort;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport {connect} from 'react-redux';\nimport HomePage from './Pages/HomePage/HomePage';\nimport CheckOut from './Pages/Checkoutpage/Checkoutpage';\nimport Header from './Components/Header/Header.component';\nimport Sort from './Components/Sort/Sort.component';\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nconst  App  = ({spinnerStatus}) => {\n    return (\n      <div>\n        <Header />\n        <Route exact path ='/' component = {Sort}/>\n        <Route exact path='/' component = {HomePage} />\n        <Route path='/CheckOut' component={CheckOut} />\n      </div>\n    )\n  \n}\n\nconst mapsStateToProps = ({shop : {spinnerFlag}}) => {\n  return {\n    spinnerStatus : spinnerFlag\n  }\n}\n\nexport default connect(mapsStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nexport const  apllyUtilityRange = (shopList, range) => {\r\n    let filteredList = [];\r\n    if(shopList && shopList.length >0 ){\r\n        filteredList =  shopList.filter((shopItem) => {\r\n            if(shopItem){\r\n                return shopItem.price > range.min && shopItem.price < range.max;\r\n            }\r\n            \r\n        } )\r\n    }\r\n    return filteredList;\r\n}\r\n\r\n\r\n\r\nexport const  apllyUtilityAdditem = (cartItems, addItem, parameter) => {\r\n    const copyCartItems = [...cartItems]\r\n    const existingItem = copyCartItems.findIndex((shopListItem) => shopListItem.id === addItem.id )\r\n\r\n    if(existingItem ===-1){\r\n        addItem.quantity = 1;\r\n        copyCartItems.push({...addItem})\r\n    }\r\n    else {\r\n        const cartItemsObj = {...copyCartItems[existingItem]};\r\n        parameter === 'addItem' ? cartItemsObj.quantity = cartItemsObj.quantity + 1 : cartItemsObj.quantity ===1  ? cartItemsObj.quantity =1 : cartItemsObj.quantity = cartItemsObj.quantity -1\r\n        copyCartItems[existingItem] = cartItemsObj;\r\n    }\r\n    return copyCartItems\r\n}\r\n\r\n\r\nexport const  apllyUtilityTotalItemCount = (addItem) => {\r\n    let quantity = 0;\r\n    let totalPrice = 0;\r\n    let totalDiscount = 0;\r\n    addItem.reduce((accumulatedItems, items) => {\r\n        quantity = quantity + items.quantity;\r\n        totalPrice = totalPrice + items.quantity* items.price;\r\n        totalDiscount = totalDiscount + items.quantity * ((items.price/100)* items.discount);\r\n    }, 0)\r\n    return {quantity, totalPrice, totalDiscount};\r\n}\r\n\r\n\r\nexport const removeItem = (cartItems, removedItem) => {\r\n    const copyCartItems = [...cartItems]\r\n    const existingItem = copyCartItems.findIndex((shopListItem) => shopListItem.id === removedItem.id )\r\n\r\n    if(existingItem >-1){\r\n        copyCartItems.splice(existingItem, 1);\r\n    }\r\n    \r\n    return copyCartItems\r\n}\r\n\r\n\r\nexport const calculateTotlPriceDiscount = (cartItems, removedItem) => {\r\n    const copyCartItems = [...cartItems]\r\n    const existingItem = copyCartItems.findIndex((shopListItem) => shopListItem.id === removedItem.id )\r\n\r\n    if(existingItem >-1){\r\n        copyCartItems.splice(existingItem, 1);\r\n    }\r\n    \r\n    return copyCartItems\r\n}\r\n\r\nexport const sortByPassedParameter = (shopList, action) => {\r\n    const copyShopList = [...shopList];\r\n    copyShopList.sort(function(previousItem, nextItem) {\r\n    let sortedItem;\r\n    if(action.payload === 'HIGH_TO_LOW' || action.payload === 'LOW_TO_HIGH'){\r\n        action.payload === 'HIGH_TO_LOW' ? sortedItem = parseFloat(nextItem.price) - parseFloat(previousItem.price) \r\n    : sortedItem = parseFloat(previousItem.price) - parseFloat(nextItem.price) \r\n    }\r\n    if(action.payload === 'SORT_BY_DISCOUNT'){\r\n        sortedItem = parseFloat(nextItem.discount) - parseFloat(previousItem.discount)  \r\n    }\r\n    \r\n    return sortedItem;\r\n});\r\nreturn copyShopList;\r\n}\r\n\r\n\r\nexport const searchByTitle = (shopList, searchString) => {\r\n    const searchStringToLowerCase =  searchString.payload.toLowerCase();\r\n    debugger\r\n    const copyCartList = [...shopList];\r\n   const filteredShopList=  copyCartList.filter((copyCartListItem) => {\r\n        return (copyCartListItem.name.toLowerCase().includes(searchStringToLowerCase))\r\n    })\r\n    return filteredShopList;\r\n}\r\n","import * as actionTypes from './ShopList.action.types'\r\nimport {\r\n    apllyUtilityRange, apllyUtilityAdditem,\r\n    apllyUtilityTotalItemCount,\r\n    removeItem,\r\n    sortByPassedParameter,\r\n    searchByTitle\r\n} from './ShopUtility';\r\nconst INITIALSTATE = {\r\n    ShopItemList: [],\r\n    copyShopItemList: [],\r\n    cartItems: [],\r\n    cartItemCount: 0,\r\n    totalPrice: 0,\r\n    totalDiscount: 0,\r\n    spinnerFlag: false\r\n}\r\n\r\nconst shopReducer = (state = INITIALSTATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_CART_LIST:\r\n            return {\r\n                ...state,\r\n                ShopItemList: action.payload,\r\n                copyShopItemList: action.payload\r\n            }\r\n\r\n        case actionTypes.APPLY_RANGE:\r\n            const copyDataFilter = [...state.copyShopItemList]\r\n            const rangeBasedFilter = apllyUtilityRange(copyDataFilter, action.payload);\r\n            return {\r\n                ...state,\r\n                ShopItemList: rangeBasedFilter\r\n            }\r\n\r\n        case actionTypes.ADD_ITEM:\r\n            let countItems = 0;\r\n            const addItemToCart = apllyUtilityAdditem(state.cartItems, action.value.cartItem, action.value.parameter);\r\n            if (addItemToCart && addItemToCart.length > 0) {\r\n                countItems = apllyUtilityTotalItemCount(addItemToCart);\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: addItemToCart,\r\n                cartItemCount: countItems.quantity,\r\n                cartItemTotalPrice: countItems.totalPrice,\r\n                cartItemTotalDiscount: countItems.totalDiscount\r\n            }\r\n\r\n        case actionTypes.REMOVE_ITEM:\r\n            let countRemoveItems = 0;\r\n            const removedItems = removeItem(state.cartItems, action.payload);\r\n            if (removedItems && removedItems.length > 0) {\r\n                countRemoveItems = apllyUtilityTotalItemCount(removedItems);\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: removedItems,\r\n                cartItemCount: countRemoveItems.quantity,\r\n                cartItemTotalPrice: countRemoveItems.totalPrice,\r\n                cartItemTotalDiscount: countRemoveItems.totalDiscount\r\n            }\r\n\r\n        case actionTypes.SORT_ITEM:\r\n            const shopList = state.ShopItemList;\r\n            if (action.payload && action.payload.length > 1) {\r\n                const sortedShopList = sortByPassedParameter(shopList, action);\r\n                return {\r\n                    ...state,\r\n                    ShopItemList: sortedShopList\r\n                }\r\n            }\r\n            else {\r\n                const resetSortBy = [...state.copyShopItemList]\r\n                return {\r\n                    ...state, \r\n                    ShopItemList: resetSortBy\r\n\r\n                }\r\n            }\r\n\r\n        case actionTypes.SET_SPINNER_FLAG:\r\n            return {\r\n                ...state,\r\n                spinnerFlag: action.payload\r\n            }\r\n\r\n        case actionTypes.SEARCH_STRING:\r\n            const searchShopList = state.copyShopItemList;\r\n            const searchedShopList = searchByTitle(searchShopList, action);\r\n            return {\r\n                ...state,\r\n                ShopItemList: searchedShopList\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default shopReducer;","import {combineReducers} from 'redux';\r\nimport shopReducer from './ShopList/ShopReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    shop : shopReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-input-range/lib/css/index.css';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware  } from 'redux';\nimport rootReducer from './redux/rootReducer';\n\n\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}